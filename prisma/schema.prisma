generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/* ----------  USER  ---------- */
model User {
  id            String   @id @default(cuid())
  role          Role     @default(VENDOR)
  nama_petugas  String
  foto_profil   String?
  email         String   @unique
  password      String   // hashed password (Credentials / JWT)
  alamat        String?
  no_telp       String?
  nama_vendor   String?  // hanya untuk role VENDOR, kosong untuk ADMIN dan VERIFIER
  date_created_at DateTime @default(now())
  verified_at   DateTime?
  verified_by   String?

  /* JWT refresh-token rotation */
  refreshTokens RefreshToken[]

  /* NextAuth legacy (optional) */
  sessions Session[]
  accounts Account[]
}

/* ----------  REFRESH TOKEN  ---------- */
model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/* ----------  NEXTAUTH LEGACY (bisa dihapus jika tidak dipakai)  ---------- */
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.LongText
  access_token      String? @db.LongText
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.LongText
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/* ----------  ENUM  ---------- */
enum Role {
  VENDOR
  VERIFIER
  ADMIN
}